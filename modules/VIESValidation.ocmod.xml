<?xml version="1.0" encoding="utf-8"?>
<modification>
    <name>VIES Validation</name>
    <version>1.0</version>
    <code>VIES Validation</code>
    <author>Rocean</author>
    <link>http://www.apps4net.com</link>

    <file path="catalog/view/theme/default/template/checkout/{guest,register}.tpl">
        
        <operation error="log">
            <search>
                <![CDATA[
                   <?php if ($custom_field['type'] == 'text') { ?>
                ]]>
            </search>
            <add position="after" offset="3"><![CDATA[
                <?php
                    if ($custom_field['custom_field_id']==1) {
                ?>
                        <span>Example: <strong>EL111222333</strong></span><br>
                <?php
                    }
                ?>
			    <span id="VATValidation"></span>
            ]]></add>
        </operation>

        <operation error="log">
            <search>
                <![CDATA[
                    $('#collapse-payment-address .custom-field').hide();
                ]]>
            </search>
            <add position="after" offset="2"><![CDATA[
				// VIES VAT number validation
            $('#payment-custom-field1' + ' input').on('change', function() {
                if(this.value) {
                  $.ajax({
                      url: 'index.php?route=checkout/checkout/checkVIES&VAT_number=' + this.value,
                      dataType: 'json',
                      success: function(json) {
                          if(json.valid==true) {
                              $('#VATValidation').text('Valid on name: ' + json.name)
                          } else {
                              $('#VATValidation').text('Invalid VAT number');
                          }
                      }
                  });
                }
            });
            ]]></add>
        </operation>

    </file>

    <file path="catalog/controller/checkout/checkout.php">

        <operation error="log">
            <search>
                <![CDATA[
                   public function customfield() {
                ]]>
            </search>
            <add position="before"><![CDATA[

                // Check if VAT number is valid EU number
                public static function isValid($id){
                    $id = strtoupper($id);
                    $id = preg_replace('/[ -,.]/', '', $id);
                    if(strlen($id) < 8){
                        return false;
                    }
                    $country = substr($id, 0, 2);
                    switch($country){
                        case 'AT': // AUSTRIA
                            $isValid = (bool) preg_match('/^(AT)U(\d{8})$/', $id);
                            break;
                        case 'BE': // BELGIUM
                            $isValid = (bool) preg_match('/(BE)(0?\d{9})$/', $id);
                            break;
                        case 'BG': // BULGARIA
                            $isValid = (bool) preg_match('/(BG)(\d{9,10})$/', $id);
                            break;
                        case 'CHE': // Switzerland
                            $isValid = (bool) preg_match('/(CHE)(\d{9})(MWST)?$/', $id);
                            break;
                        case 'CY': // CYPRUS
                            $isValid = (bool) preg_match('/^(CY)([0-5|9]\d{7}[A-Z])$/', $id);
                            break;
                        case 'CZ': // CZECH REPUBLIC
                            $isValid = (bool) preg_match('/^(CZ)(\d{8,10})(\d{3})?$/', $id);
                            break;
                        case 'DE': // GERMANY
                            $isValid = (bool) preg_match('/^(DE)([1-9]\d{8})/', $id);
                            break;
                        case 'DK': // DENMARK
                            $isValid = (bool) preg_match('/^(DK)(\d{8})$/', $id);
                            break;
                        case 'EE': // ESTONIA
                            $isValid = (bool) preg_match('/^(EE)(10\d{7})$/', $id);
                            break;
                        case 'EL': // GREECE
                            $isValid = (bool) preg_match('/^(EL)(\d{9})$/', $id);
                            break;
                        case 'ES': // SPAIN
                            $isValid = (bool) preg_match('/^(ES)([A-Z]\d{8})$/', $id)
                                || preg_match('/^(ES)([A-H|N-S|W]\d{7}[A-J])$/', $id)
                                || preg_match('/^(ES)([0-9|Y|Z]\d{7}[A-Z])$/', $id)
                                || preg_match('/^(ES)([K|L|M|X]\d{7}[A-Z])$/', $id);
                            break;
                        case 'EU': // EU type
                            $isValid = (bool) preg_match('/^(EU)(\d{9})$/', $id);
                            break;
                        case 'FI': // FINLAND
                            $isValid = (bool) preg_match('/^(FI)(\d{8})$/', $id);
                            break;
                        case 'FR': // FRANCE
                            $isValid = (bool) preg_match('/^(FR)(\d{11})$/', $id)
                                || preg_match('/^(FR)([(A-H)|(J-N)|(P-Z)]\d{10})$/', $id)
                                || preg_match('/^(FR)(\d[(A-H)|(J-N)|(P-Z)]\d{9})$/', $id)
                                || preg_match('/^(FR)([(A-H)|(J-N)|(P-Z)]{2}\d{9})$/', $id);
                            break;
                        case 'GB': // GREAT BRITAIN
                            $isValid = (bool) preg_match('/^(GB)?(\d{9})$/', $id)
                                || preg_match('/^(GB)?(\d{12})$/', $id)
                                || preg_match('/^(GB)?(GD\d{3})$/', $id)
                                || preg_match('/^(GB)?(HA\d{3})$/', $id);
                            break;
                        case 'EL': // GREECE
                            $isValid = (bool) preg_match('/^(EL)(\d{8,9})$/', $id);
                            break;
                        case 'HR': // CROATIA
                            $isValid = (bool) preg_match('/^(HR)(\d{11})$/', $id);
                            break;
                        case 'HU': // HUNGARY
                            $isValid = (bool) preg_match('/^(HU)(\d{8})$/', $id);
                            break;
                        case 'IE': // IRELAND
                            $isValid = (bool) preg_match('/^(IE)(\d{7}[A-W])$/', $id)
                                || preg_match('/^(IE)([7-9][A-Z\*\+)]\d{5}[A-W])$/', $id)
                                || preg_match('/^(IE)(\d{7}[A-W][AH])$/', $id);
                            break;
                        case 'IT': // ITALY
                            $isValid = (bool) preg_match('/^(IT)(\d{11})$/', $id);
                            break;
                        case 'LV': // LATVIA
                            $isValid = (bool) preg_match('/^(LV)(\d{11})$/', $id);
                            break;
                        case 'LT': // LITHUNIA
                            $isValid = (bool) preg_match('/^(LT)(\d{9}|\d{12})$/', $id);
                            break;
                        case 'LU': // LUXEMBOURG
                            $isValid = (bool) preg_match('/^(LU)(\d{8})$/', $id);
                            break;
                        case 'MT': // MALTA
                            $isValid = (bool) preg_match('/^(MT)([1-9]\d{7})$/', $id);
                            break;
                        case 'NL': // NETHERLAND
                            $isValid = (bool) preg_match('/^(NL)(\d{9})B\d{2}$/', $id);
                            break;
                        case 'NO': // NORWAY
                            $isValid = (bool) preg_match('/^(NO)(\d{9})$/', $id);
                            break;
                        case 'PL': // POLAND
                            $isValid = (bool) preg_match('/^(PL)(\d{10})$/', $id);
                            break;
                        case 'PT': // PORTUGAL
                            $isValid = (bool) preg_match('/^(PT)(\d{9})$/', $id);
                            break;
                        case 'RO': // ROMANIA
                            $isValid = (bool) preg_match('/^(RO)([1-9]\d{1,9})$/', $id);
                            break;
                        case 'RS': // SERBIA
                            $isValid = (bool) preg_match('/^(RS)(\d{9})$/', $id);
                            break;
                        case 'SI': // SLOVENIA
                            $isValid = (bool) preg_match('/^(SI)([1-9]\d{7})$/', $id);
                            break;
                        case 'SK': // SLOVAK REPUBLIC
                            $isValid = (bool) preg_match('/^(SK)([1-9]\d[(2-4)|(6-9)]\d{7})$/', $id);
                            break;
                        case 'SE': // SWEDEN
                            $isValid = (bool) preg_match('/^(SE)(\d{10}01)$/', $id);
                            break;
                        default:
                            $isValid = false;
                    }

                    return $isValid;
                }

			    // Έλεγχος VIES vat number
                public function checkVIES() {

                    if (isset($this->request->get['VAT_number'])) {
                        if(self::isValid($this->request->get['VAT_number'])) {
                            $countryCode = substr($this->request->get['VAT_number'], 0, 2);
                            $vatNumber = substr($this->request->get['VAT_number'], 2);
                            $client = new SoapClient("http://ec.europa.eu/taxation_customs/vies/checkVatService.wsdl");
                            $json = $client->checkVat(array(
                                'countryCode' => $countryCode,
                                'vatNumber' => $vatNumber));
                        } else {
                            $json = array('valid' => false);
                        }
                    }

                    $this->response->addHeader('Content-Type: application/json');
                    $this->response->setOutput(json_encode($json));
                }

            ]]></add>
        </operation>

    </file>

    <file path="admin/view/template/sale/order_info.tpl">

        <operation error="log">
            <search>
                <![CDATA[
                   <td class="text-left"><?php echo $shipping_address; ?></td>
                ]]>
            </search>
            <add position="after" offset="2"><![CDATA[
			    <?php
              if($customer_group=='Business Account') {
              ?>
                <tr>
                    <td>
                        <button type="button" id="CheckVIESValidation" class="btn btn-success btn-xs"><?php echo $payment_custom_fields[0]['value'].' VAT validation'; ?></button>
                        <input type="hidden" id="VATNumber" value="<?php echo $payment_custom_fields[0]['value']; ?>">
                        <span id="VATValidation"></span>
                    </td>
                </tr>
              <?php
              }
            ?>
            ]]></add>
        </operation>

        <operation error="log">
            <search>
                <![CDATA[
                   function addOrderInfo(){
                ]]>
            </search>
            <add position="before"><![CDATA[
			    // VIES VAT number validation
            $('#CheckVIESValidation').on('click', function() {
                  $.ajax({
                      url: 'index.php?route=sale/order/checkVIES&token=<?php echo $token; ?>&VAT_number=' + $('#VATNumber').val(),
                      dataType: 'json',
                      success: function(json) {
                          if(json.valid==true) {
                              $('#VATValidation').text('Valid on name: ' + json.name)
                          } else {
                              $('#VATValidation').text('Invalid VAT number');
                          }
                      },
                      error: function(xhr, ajaxOptions, thrownError) {
                            console.log(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
                        }
                  });
            });
            ]]></add>
        </operation>

    </file>

    <file path="admin/controller/sale/order.php">

        <operation error="log">
            <search>
                <![CDATA[
                   public function shipping() {
                ]]>
            </search>
            <add position="before"><![CDATA[

                // Check if VAT number is valid EU number
                public static function isValid($id){
                    $id = strtoupper($id);
                    $id = preg_replace('/[ -,.]/', '', $id);
                    if(strlen($id) < 8){
                        return false;
                    }
                    $country = substr($id, 0, 2);
                    switch($country){
                        case 'AT': // AUSTRIA
                            $isValid = (bool) preg_match('/^(AT)U(\d{8})$/', $id);
                            break;
                        case 'BE': // BELGIUM
                            $isValid = (bool) preg_match('/(BE)(0?\d{9})$/', $id);
                            break;
                        case 'BG': // BULGARIA
                            $isValid = (bool) preg_match('/(BG)(\d{9,10})$/', $id);
                            break;
                        case 'CHE': // Switzerland
                            $isValid = (bool) preg_match('/(CHE)(\d{9})(MWST)?$/', $id);
                            break;
                        case 'CY': // CYPRUS
                            $isValid = (bool) preg_match('/^(CY)([0-5|9]\d{7}[A-Z])$/', $id);
                            break;
                        case 'CZ': // CZECH REPUBLIC
                            $isValid = (bool) preg_match('/^(CZ)(\d{8,10})(\d{3})?$/', $id);
                            break;
                        case 'DE': // GERMANY
                            $isValid = (bool) preg_match('/^(DE)([1-9]\d{8})/', $id);
                            break;
                        case 'DK': // DENMARK
                            $isValid = (bool) preg_match('/^(DK)(\d{8})$/', $id);
                            break;
                        case 'EE': // ESTONIA
                            $isValid = (bool) preg_match('/^(EE)(10\d{7})$/', $id);
                            break;
                        case 'EL': // GREECE
                            $isValid = (bool) preg_match('/^(EL)(\d{9})$/', $id);
                            break;
                        case 'ES': // SPAIN
                            $isValid = (bool) preg_match('/^(ES)([A-Z]\d{8})$/', $id)
                                || preg_match('/^(ES)([A-H|N-S|W]\d{7}[A-J])$/', $id)
                                || preg_match('/^(ES)([0-9|Y|Z]\d{7}[A-Z])$/', $id)
                                || preg_match('/^(ES)([K|L|M|X]\d{7}[A-Z])$/', $id);
                            break;
                        case 'EU': // EU type
                            $isValid = (bool) preg_match('/^(EU)(\d{9})$/', $id);
                            break;
                        case 'FI': // FINLAND
                            $isValid = (bool) preg_match('/^(FI)(\d{8})$/', $id);
                            break;
                        case 'FR': // FRANCE
                            $isValid = (bool) preg_match('/^(FR)(\d{11})$/', $id)
                                || preg_match('/^(FR)([(A-H)|(J-N)|(P-Z)]\d{10})$/', $id)
                                || preg_match('/^(FR)(\d[(A-H)|(J-N)|(P-Z)]\d{9})$/', $id)
                                || preg_match('/^(FR)([(A-H)|(J-N)|(P-Z)]{2}\d{9})$/', $id);
                            break;
                        case 'GB': // GREAT BRITAIN
                            $isValid = (bool) preg_match('/^(GB)?(\d{9})$/', $id)
                                || preg_match('/^(GB)?(\d{12})$/', $id)
                                || preg_match('/^(GB)?(GD\d{3})$/', $id)
                                || preg_match('/^(GB)?(HA\d{3})$/', $id);
                            break;
                        case 'EL': // GREECE
                            $isValid = (bool) preg_match('/^(EL)(\d{8,9})$/', $id);
                            break;
                        case 'HR': // CROATIA
                            $isValid = (bool) preg_match('/^(HR)(\d{11})$/', $id);
                            break;
                        case 'HU': // HUNGARY
                            $isValid = (bool) preg_match('/^(HU)(\d{8})$/', $id);
                            break;
                        case 'IE': // IRELAND
                            $isValid = (bool) preg_match('/^(IE)(\d{7}[A-W])$/', $id)
                                || preg_match('/^(IE)([7-9][A-Z\*\+)]\d{5}[A-W])$/', $id)
                                || preg_match('/^(IE)(\d{7}[A-W][AH])$/', $id);
                            break;
                        case 'IT': // ITALY
                            $isValid = (bool) preg_match('/^(IT)(\d{11})$/', $id);
                            break;
                        case 'LV': // LATVIA
                            $isValid = (bool) preg_match('/^(LV)(\d{11})$/', $id);
                            break;
                        case 'LT': // LITHUNIA
                            $isValid = (bool) preg_match('/^(LT)(\d{9}|\d{12})$/', $id);
                            break;
                        case 'LU': // LUXEMBOURG
                            $isValid = (bool) preg_match('/^(LU)(\d{8})$/', $id);
                            break;
                        case 'MT': // MALTA
                            $isValid = (bool) preg_match('/^(MT)([1-9]\d{7})$/', $id);
                            break;
                        case 'NL': // NETHERLAND
                            $isValid = (bool) preg_match('/^(NL)(\d{9})B\d{2}$/', $id);
                            break;
                        case 'NO': // NORWAY
                            $isValid = (bool) preg_match('/^(NO)(\d{9})$/', $id);
                            break;
                        case 'PL': // POLAND
                            $isValid = (bool) preg_match('/^(PL)(\d{10})$/', $id);
                            break;
                        case 'PT': // PORTUGAL
                            $isValid = (bool) preg_match('/^(PT)(\d{9})$/', $id);
                            break;
                        case 'RO': // ROMANIA
                            $isValid = (bool) preg_match('/^(RO)([1-9]\d{1,9})$/', $id);
                            break;
                        case 'RS': // SERBIA
                            $isValid = (bool) preg_match('/^(RS)(\d{9})$/', $id);
                            break;
                        case 'SI': // SLOVENIA
                            $isValid = (bool) preg_match('/^(SI)([1-9]\d{7})$/', $id);
                            break;
                        case 'SK': // SLOVAK REPUBLIC
                            $isValid = (bool) preg_match('/^(SK)([1-9]\d[(2-4)|(6-9)]\d{7})$/', $id);
                            break;
                        case 'SE': // SWEDEN
                            $isValid = (bool) preg_match('/^(SE)(\d{10}01)$/', $id);
                            break;
                        default:
                            $isValid = false;
                    }

                    return $isValid;
                }

			    // Έλεγχος VIES vat number
                public function checkVIES() {

                    if (isset($this->request->get['VAT_number'])) {
                        if(self::isValid($this->request->get['VAT_number'])) {
                            $countryCode = substr($this->request->get['VAT_number'], 0, 2);
                            $vatNumber = substr($this->request->get['VAT_number'], 2);
                            $client = new SoapClient("http://ec.europa.eu/taxation_customs/vies/checkVatService.wsdl");
                            $json = $client->checkVat(array(
                                'countryCode' => $countryCode,
                                'vatNumber' => $vatNumber));
                        } else {
                            $json = array('valid' => false);
                        }
                    }

                    $this->response->addHeader('Content-Type: application/json');
                    $this->response->setOutput(json_encode($json));
                }

            ]]></add>
        </operation>

    </file>

</modification>